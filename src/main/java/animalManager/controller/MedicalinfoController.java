package animalManager.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import animalManager.model.Medicalinfo;
import animalManager.repository.MedicalinfoRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/medical") // This means URL's start with /demo (after Application path)
public class MedicalinfoController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private MedicalinfoRepository medicalinfoRepository;

	@RequestMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewMedical (@RequestParam String username, 
			@RequestParam int year, @RequestParam int month, 
			@RequestParam int day) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Medicalinfo medicalinfo = new Medicalinfo();
		medicalinfo.setUserName(username);
		medicalinfo.setYear(year);
		medicalinfo.setMonth(month);
		medicalinfo.setDay(day);
		medicalinfoRepository.save(medicalinfo);
		return "MedicalSaved";
	}

	@RequestMapping(path="/all")
	public @ResponseBody Iterable<Medicalinfo> getAllMedicals() {
		// This returns a JSON or XML with the users
		return medicalinfoRepository.findAll();
	}
	
	@RequestMapping(path="/findone")
	public @ResponseBody Iterable<Medicalinfo> getMedical(@RequestParam String username, @RequestParam int year, @RequestParam int month, @RequestParam int day) {
		return medicalinfoRepository.findMedical(username, year, month, day);
	}

	@RequestMapping(path="/delete")
	public @ResponseBody String deleteMedical(@RequestParam String username, @RequestParam int year, @RequestParam int month, @RequestParam int day){
		medicalinfoRepository.deleteMedical(username, year, month, day);
		return "MedicalDeleted";
	}

	@RequestMapping(path="/update")
	public @ResponseBody String updateAnimal(@RequestParam String username, @RequestParam int year, @RequestParam int month, @RequestParam int day,
        @RequestParam int body_length, @RequestParam int body_waistline, @RequestParam int body_weight, 
        @RequestParam String physical_exam_result, @RequestParam String physical_exam_doctor, @RequestParam String physical_exam_comment,
        @RequestParam String physical_exam_advice, @RequestParam String urine_color, @RequestParam String acid_base_reaction,
        @RequestParam String transparency, @RequestParam String urine_occult_blood, @RequestParam String assay_urine_result, 
        @RequestParam String assay_urine_doctor, @RequestParam String defecate_occult_blood, @RequestParam String canine_parvovirus,
        @RequestParam String neutral_fat, @RequestParam String parasite, @RequestParam String muscle_fibers, @RequestParam String assay_defecate_result,
        @RequestParam String assay_defecate_doctor, @RequestParam String red_blood_cell, @RequestParam String white_blood_cell, 
        @RequestParam String esr, @RequestParam String hemoglobin, @RequestParam String assay_blood_result, @RequestParam String assay_blood_doctor, 
        @RequestParam String assay_comment, @RequestParam String assay_advice, @RequestParam String vaccine_name, @RequestParam String vaccine_dosage, 
        @RequestParam String vaccine_doctor, @RequestParam String diagnose_symptom, @RequestParam String diagnose_diagnosis, @RequestParam String diagnose_prescribe){
		medicalinfoRepository.updateMedical(username, year, month, day,
        	body_length, body_waistline, body_weight, 
        	physical_exam_result, physical_exam_doctor, physical_exam_comment,
        	physical_exam_advice, urine_color, acid_base_reaction,
        	transparency, urine_occult_blood, assay_urine_result, 
        	assay_urine_doctor, defecate_occult_blood, canine_parvovirus,
        	neutral_fat, parasite, muscle_fibers, assay_defecate_result,
        	assay_defecate_doctor, red_blood_cell, white_blood_cell, 
        	esr, hemoglobin, assay_blood_result, assay_blood_doctor, 
        	assay_comment, assay_advice, vaccine_name, vaccine_dosage, 
        	vaccine_doctor, diagnose_symptom, diagnose_diagnosis, diagnose_prescribe);
		return "MedicalUpdate";
	}
}