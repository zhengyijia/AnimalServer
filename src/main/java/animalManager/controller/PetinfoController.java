package animalManager.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import animalManager.model.Petinfo;
import animalManager.repository.PetinfoRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/animal") // This means URL's start with /demo (after Application path)
public class PetinfoController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private PetinfoRepository petinfoRepository;

	@RequestMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewAnimal (@RequestParam String id, 
			@RequestParam String name, @RequestParam String gender, 
			@RequestParam int age, @RequestParam String status, 
			@RequestParam String vaccine, @RequestParam String remark) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Petinfo petinfo = new Petinfo();
		petinfo.setId(id);
		petinfo.setName(name);
		petinfo.setGender(gender);
		petinfo.setAge(age);
		petinfo.setStatus(status);
		petinfo.setVaccine(vaccine);
		petinfo.setRemark(remark);
		petinfoRepository.save(petinfo);
		return "AnimalSaved";
	}

	@RequestMapping(path="/all")
	public @ResponseBody Iterable<Petinfo> getAllAnimals() {
		// This returns a JSON or XML with the users
		return petinfoRepository.findAll();
	}
	
	@RequestMapping(path="/find")
	public @ResponseBody Iterable<Petinfo> getUser(@RequestParam String id) {
		return petinfoRepository.findAnimal(id);
	}

	@RequestMapping(path="/delete")
	public @ResponseBody String deleteAnimal(@RequestParam String id){
		petinfoRepository.deleteAnimal(id);
		return "AnimalDeleted";
	}

	@RequestMapping(path="/update")
	public @ResponseBody String updateAnimal(@RequestParam String id, 
			@RequestParam String name, @RequestParam String gender, 
			@RequestParam int age, @RequestParam String status, 
			@RequestParam String vaccine, @RequestParam String remark){
		petinfoRepository.updateAnimal(id, name, gender, age, status, vaccine, remark);
		return "AnimalUpdate";
	}
}